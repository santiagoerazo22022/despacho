{"ast":null,"code":"var _jsxFileName = \"E:\\\\Proyectos\\\\despacho-prueba\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: true,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          authService.setAuthToken(token);\n          const response = await authService.getProfile();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data.user,\n              token: token\n            }\n          });\n        } catch (error) {\n          // Token is invalid, remove it\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async credentials => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authService.login(credentials);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n      authService.setAuthToken(token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return response;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error de autenticación';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    authService.removeAuthToken();\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    updateUser,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","isAuthenticated","user","payload","token","initialState","AuthProvider","children","_s","dispatch","checkAuthStatus","localStorage","getItem","setAuthToken","response","getProfile","data","removeItem","login","credentials","setItem","_error$response","_error$response$data","errorMessage","message","logout","removeAuthToken","updateUser","userData","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/Proyectos/despacho-prueba/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        error: action.payload,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  token: null,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          authService.setAuthToken(token);\r\n          const response = await authService.getProfile();\r\n          dispatch({\r\n            type: 'LOGIN_SUCCESS',\r\n            payload: {\r\n              user: response.data.user,\r\n              token: token,\r\n            },\r\n          });\r\n        } catch (error) {\r\n          // Token is invalid, remove it\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'LOGOUT' });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      const { user, token } = response.data;\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('token', token);\r\n      authService.setAuthToken(token);\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token },\r\n      });\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Error de autenticación';\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: errorMessage,\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    authService.removeAuthToken();\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    dispatch({ type: 'UPDATE_USER', payload: userData });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    clearError,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
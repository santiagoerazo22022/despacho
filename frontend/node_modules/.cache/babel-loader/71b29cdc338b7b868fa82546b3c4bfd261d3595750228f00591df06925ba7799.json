{"ast":null,"code":"import api from './api';\nexport const expedienteService = {\n  // Get all expedientes with pagination and filters\n  getExpedientes: async (params = {}) => {\n    const response = await api.get('/expedientes-simple', {\n      params\n    });\n    return response.data;\n  },\n  // Get expediente by ID\n  getExpedienteById: async id => {\n    const response = await api.get(`/expedientes-simple/${id}`);\n    return response.data;\n  },\n  // Create new expediente with file upload\n  createExpediente: async formData => {\n    const response = await api.post('/expedientes-simple', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Update expediente (only admin)\n  updateExpediente: async (id, data) => {\n    const response = await api.put(`/expedientes-simple/${id}`, data);\n    return response.data;\n  },\n  // Delete expediente (only admin)\n  deleteExpediente: async id => {\n    const response = await api.delete(`/expedientes-simple/${id}`);\n    return response.data;\n  },\n  // Download scanned file\n  downloadFile: async id => {\n    const response = await api.get(`/expedientes-simple/${id}/download-file`, {\n      responseType: 'blob'\n    });\n    return response;\n  },\n  // Download PDF receipt\n  downloadComprobante: async id => {\n    const response = await api.get(`/expedientes-simple/${id}/download-comprobante`, {\n      responseType: 'blob'\n    });\n    return response;\n  },\n  // Helper function to download file\n  downloadFileHelper: (blob, filename) => {\n    const url = window.URL.createObjectURL(new Blob([blob]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    window.URL.revokeObjectURL(url);\n  }\n};","map":{"version":3,"names":["api","expedienteService","getExpedientes","params","response","get","data","getExpedienteById","id","createExpediente","formData","post","headers","updateExpediente","put","deleteExpediente","delete","downloadFile","responseType","downloadComprobante","downloadFileHelper","blob","filename","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL"],"sources":["E:/Proyectos/despacho-prueba/frontend/src/services/expedienteService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const expedienteService = {\r\n  // Get all expedientes with pagination and filters\r\n  getExpedientes: async (params = {}) => {\r\n    const response = await api.get('/expedientes-simple', { params });\r\n    return response.data;\r\n  },\r\n\r\n  // Get expediente by ID\r\n  getExpedienteById: async (id) => {\r\n    const response = await api.get(`/expedientes-simple/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new expediente with file upload\r\n  createExpediente: async (formData) => {\r\n    const response = await api.post('/expedientes-simple', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Update expediente (only admin)\r\n  updateExpediente: async (id, data) => {\r\n    const response = await api.put(`/expedientes-simple/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete expediente (only admin)\r\n  deleteExpediente: async (id) => {\r\n    const response = await api.delete(`/expedientes-simple/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Download scanned file\r\n  downloadFile: async (id) => {\r\n    const response = await api.get(`/expedientes-simple/${id}/download-file`, {\r\n      responseType: 'blob',\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Download PDF receipt\r\n  downloadComprobante: async (id) => {\r\n    const response = await api.get(`/expedientes-simple/${id}/download-comprobante`, {\r\n      responseType: 'blob',\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Helper function to download file\r\n  downloadFileHelper: (blob, filename) => {\r\n    const url = window.URL.createObjectURL(new Blob([blob]));\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(url);\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,iBAAiB,GAAG;EAC/B;EACAC,cAAc,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IACrC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,qBAAqB,EAAE;MAAEF;IAAO,CAAC,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,iBAAiB,EAAE,MAAOC,EAAE,IAAK;IAC/B,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,uBAAuBG,EAAE,EAAE,CAAC;IAC3D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,gBAAgB,EAAE,MAAOC,QAAQ,IAAK;IACpC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,qBAAqB,EAAED,QAAQ,EAAE;MAC/DE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAO,gBAAgB,EAAE,MAAAA,CAAOL,EAAE,EAAEF,IAAI,KAAK;IACpC,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,uBAAuBN,EAAE,EAAE,EAAEF,IAAI,CAAC;IACjE,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAS,gBAAgB,EAAE,MAAOP,EAAE,IAAK;IAC9B,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,MAAM,CAAC,uBAAuBR,EAAE,EAAE,CAAC;IAC9D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAW,YAAY,EAAE,MAAOT,EAAE,IAAK;IAC1B,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,uBAAuBG,EAAE,gBAAgB,EAAE;MACxEU,YAAY,EAAE;IAChB,CAAC,CAAC;IACF,OAAOd,QAAQ;EACjB,CAAC;EAED;EACAe,mBAAmB,EAAE,MAAOX,EAAE,IAAK;IACjC,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,uBAAuBG,EAAE,uBAAuB,EAAE;MAC/EU,YAAY,EAAE;IAChB,CAAC,CAAC;IACF,OAAOd,QAAQ;EACjB,CAAC;EAED;EACAgB,kBAAkB,EAAEA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACtC,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC;IACxD,MAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGR,GAAG;IACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAEV,QAAQ,CAAC;IACvCO,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;IACbZ,MAAM,CAACC,GAAG,CAACY,eAAe,CAACd,GAAG,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Base URL del backend\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  const {\n    response\n  } = error;\n  if (response) {\n    const {\n      status,\n      data\n    } = response;\n    switch (status) {\n      case 401:\n        // Unauthorized - token expired or invalid\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n        toast.error('Sesión expirada. Por favor, inicia sesión nuevamente.');\n        break;\n      case 403:\n        toast.error('No tienes permisos para realizar esta acción.');\n        break;\n      case 404:\n        toast.error(data.message || 'Recurso no encontrado.');\n        break;\n      case 422:\n        // Validation errors\n        if (data.errors && Array.isArray(data.errors)) {\n          data.errors.forEach(err => toast.error(err.msg));\n        } else {\n          toast.error(data.message || 'Error de validación.');\n        }\n        break;\n      case 429:\n        toast.error('Demasiadas solicitudes. Intenta de nuevo más tarde.');\n        break;\n      case 500:\n        toast.error('Error interno del servidor. Intenta de nuevo más tarde.');\n        break;\n      default:\n        toast.error(data.message || 'Ha ocurrido un error inesperado.');\n    }\n  } else if (error.code === 'ECONNABORTED') {\n    toast.error('Tiempo de espera agotado. Verifica tu conexión a internet.');\n  } else if (error.code === 'ERR_NETWORK') {\n    toast.error('Error de red. Verifica tu conexión a internet.');\n  } else {\n    toast.error('Ha ocurrido un error inesperado.');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","toast","BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","removeItem","window","location","href","message","errors","Array","isArray","forEach","err","msg","code"],"sources":["E:/Proyectos/despacho-prueba/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Base URL del backend\r\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const { response } = error;\r\n    \r\n    if (response) {\r\n      const { status, data } = response;\r\n      \r\n      switch (status) {\r\n        case 401:\r\n          // Unauthorized - token expired or invalid\r\n          localStorage.removeItem('token');\r\n          window.location.href = '/login';\r\n          toast.error('Sesión expirada. Por favor, inicia sesión nuevamente.');\r\n          break;\r\n        case 403:\r\n          toast.error('No tienes permisos para realizar esta acción.');\r\n          break;\r\n        case 404:\r\n          toast.error(data.message || 'Recurso no encontrado.');\r\n          break;\r\n        case 422:\r\n          // Validation errors\r\n          if (data.errors && Array.isArray(data.errors)) {\r\n            data.errors.forEach(err => toast.error(err.msg));\r\n          } else {\r\n            toast.error(data.message || 'Error de validación.');\r\n          }\r\n          break;\r\n        case 429:\r\n          toast.error('Demasiadas solicitudes. Intenta de nuevo más tarde.');\r\n          break;\r\n        case 500:\r\n          toast.error('Error interno del servidor. Intenta de nuevo más tarde.');\r\n          break;\r\n        default:\r\n          toast.error(data.message || 'Ha ocurrido un error inesperado.');\r\n      }\r\n    } else if (error.code === 'ECONNABORTED') {\r\n      toast.error('Tiempo de espera agotado. Verifica tu conexión a internet.');\r\n    } else if (error.code === 'ERR_NETWORK') {\r\n      toast.error('Error de red. Verifica tu conexión a internet.');\r\n    } else {\r\n      toast.error('Ha ocurrido un error inesperado.');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE7E;AACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEN,QAAQ;EACjBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT,MAAM;IAAEG;EAAS,CAAC,GAAGH,KAAK;EAE1B,IAAIG,QAAQ,EAAE;IACZ,MAAM;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGF,QAAQ;IAEjC,QAAQC,MAAM;MACZ,KAAK,GAAG;QACN;QACAP,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;QAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B3B,KAAK,CAACkB,KAAK,CAAC,uDAAuD,CAAC;QACpE;MACF,KAAK,GAAG;QACNlB,KAAK,CAACkB,KAAK,CAAC,+CAA+C,CAAC;QAC5D;MACF,KAAK,GAAG;QACNlB,KAAK,CAACkB,KAAK,CAACK,IAAI,CAACK,OAAO,IAAI,wBAAwB,CAAC;QACrD;MACF,KAAK,GAAG;QACN;QACA,IAAIL,IAAI,CAACM,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACR,IAAI,CAACM,MAAM,CAAC,EAAE;UAC7CN,IAAI,CAACM,MAAM,CAACG,OAAO,CAACC,GAAG,IAAIjC,KAAK,CAACkB,KAAK,CAACe,GAAG,CAACC,GAAG,CAAC,CAAC;QAClD,CAAC,MAAM;UACLlC,KAAK,CAACkB,KAAK,CAACK,IAAI,CAACK,OAAO,IAAI,sBAAsB,CAAC;QACrD;QACA;MACF,KAAK,GAAG;QACN5B,KAAK,CAACkB,KAAK,CAAC,qDAAqD,CAAC;QAClE;MACF,KAAK,GAAG;QACNlB,KAAK,CAACkB,KAAK,CAAC,yDAAyD,CAAC;QACtE;MACF;QACElB,KAAK,CAACkB,KAAK,CAACK,IAAI,CAACK,OAAO,IAAI,kCAAkC,CAAC;IACnE;EACF,CAAC,MAAM,IAAIV,KAAK,CAACiB,IAAI,KAAK,cAAc,EAAE;IACxCnC,KAAK,CAACkB,KAAK,CAAC,4DAA4D,CAAC;EAC3E,CAAC,MAAM,IAAIA,KAAK,CAACiB,IAAI,KAAK,aAAa,EAAE;IACvCnC,KAAK,CAACkB,KAAK,CAAC,gDAAgD,CAAC;EAC/D,CAAC,MAAM;IACLlB,KAAK,CAACkB,KAAK,CAAC,kCAAkC,CAAC;EACjD;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
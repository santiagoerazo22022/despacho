{"ast":null,"code":"import api from './api';\nexport const userService = {\n  // Get all users (admin only)\n  getUsers: async (params = {}) => {\n    const response = await api.get('/users', {\n      params\n    });\n    return response.data;\n  },\n  // Get user by ID (admin only)\n  getUserById: async id => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  // Create new user (admin only)\n  createUser: async userData => {\n    const response = await api.post('/users', userData);\n    return response.data;\n  },\n  // Update user (admin only)\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n  // Delete user (admin only)\n  deleteUser: async id => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  },\n  // Reset user password (admin only)\n  resetUserPassword: async (id, newPassword) => {\n    const response = await api.put(`/users/${id}/reset-password`, {\n      newPassword\n    });\n    return response.data;\n  },\n  // Get user statistics (admin only)\n  getUserStats: async () => {\n    const response = await api.get('/users/stats');\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","userService","getUsers","params","response","get","data","getUserById","id","createUser","userData","post","updateUser","put","deleteUser","delete","resetUserPassword","newPassword","getUserStats"],"sources":["E:/Proyectos/despacho-prueba/frontend/src/services/userService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const userService = {\r\n  // Get all users (admin only)\r\n  getUsers: async (params = {}) => {\r\n    const response = await api.get('/users', { params });\r\n    return response.data;\r\n  },\r\n\r\n  // Get user by ID (admin only)\r\n  getUserById: async (id) => {\r\n    const response = await api.get(`/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new user (admin only)\r\n  createUser: async (userData) => {\r\n    const response = await api.post('/users', userData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update user (admin only)\r\n  updateUser: async (id, userData) => {\r\n    const response = await api.put(`/users/${id}`, userData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete user (admin only)\r\n  deleteUser: async (id) => {\r\n    const response = await api.delete(`/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Reset user password (admin only)\r\n  resetUserPassword: async (id, newPassword) => {\r\n    const response = await api.put(`/users/${id}/reset-password`, { newPassword });\r\n    return response.data;\r\n  },\r\n\r\n  // Get user statistics (admin only)\r\n  getUserStats: async () => {\r\n    const response = await api.get('/users/stats');\r\n    return response.data;\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,QAAQ,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC/B,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,QAAQ,EAAE;MAAEF;IAAO,CAAC,CAAC;IACpD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;IAC9C,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;IACnD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,UAAU,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,QAAQ,KAAK;IAClC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACa,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEE,QAAQ,CAAC;IACxD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAQ,UAAU,EAAE,MAAON,EAAE,IAAK;IACxB,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACe,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;IACjD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAU,iBAAiB,EAAE,MAAAA,CAAOR,EAAE,EAAES,WAAW,KAAK;IAC5C,MAAMb,QAAQ,GAAG,MAAMJ,GAAG,CAACa,GAAG,CAAC,UAAUL,EAAE,iBAAiB,EAAE;MAAES;IAAY,CAAC,CAAC;IAC9E,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAY,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}